Sub ResumirMesasExamen()
    Dim oDoc As Object
    Dim oSheets As Object
    Dim oSheetOriginal As Object
    Dim oSheetResumido As Object
    Dim nFilaActual As Long
    Dim nFilaDestino As Long
    Dim sCellValue As String
    Dim nLastRow As Long
    Dim oDocBaseDatos As Object
    Dim sRutaBaseDatos As String
    
    ' Obtener el documento actual
    oDoc = ThisComponent
    oSheets = oDoc.Sheets
    
    ' Obtener la hoja original (asumimos que es la primera)
    oSheetOriginal = oSheets.getByIndex(0)
    
    ' Definir la ruta de la base de datos
    sRutaBaseDatos = "/home/cristian/Documentos/ALUMNOS/BASE DE DATOS/Base de datos de MESAS Y DOCENTES.ods"
    
    ' Intentar abrir el archivo de base de datos
    oDocBaseDatos = AbrirBaseDatos(sRutaBaseDatos)
    
    ' Si no se pudo abrir, terminar la macro
    If IsNull(oDocBaseDatos) Then
        MsgBox "No se pudo abrir la base de datos. La macro se detendrá.", 16, "Error"
        Exit Sub
    End If
    
    ' Crear nueva hoja "RESUMIDO" si no existe
    If oSheets.hasByName("RESUMIDO") Then
        oSheets.removeByName("RESUMIDO")
    End If
    oSheets.insertNewByName("RESUMIDO", oSheets.getCount())
    oSheetResumido = oSheets.getByName("RESUMIDO")
    
    ' Crear encabezados en la hoja RESUMIDO
    oSheetResumido.getCellByPosition(0, 0).setString("Materia")
    oSheetResumido.getCellByPosition(1, 0).setString("Fecha")
    oSheetResumido.getCellByPosition(2, 0).setString("Hora")
    oSheetResumido.getCellByPosition(3, 0).setString("Presidente")
    oSheetResumido.getCellByPosition(4, 0).setString("Vocal 1")
    oSheetResumido.getCellByPosition(5, 0).setString("Vocal 2")
    
    ' Determinar la última fila con datos
    nLastRow = 1500
    
    ' Inicializar fila de destino
    nFilaDestino = 1
    
    ' Recorrer la hoja original buscando nombres de materias
    nFilaActual = 5 ' Comenzar desde la fila 6 (índice 5)
    
    While nFilaActual < nLastRow
        sCellValue = Trim(oSheetOriginal.getCellByPosition(0, nFilaActual).getString())
        
        ' Verificar si la celda contiene un código de materia
        If Len(sCellValue) > 0 And Left(sCellValue, 1) = "(" Then
            ' Leer el subtítulo
            Dim sSubtitulo As String
            sSubtitulo = Trim(oSheetOriginal.getCellByPosition(0, nFilaActual + 1).getString())
            
            ' Filtrar
            Dim bIncluirMesa As Boolean
            bIncluirMesa = True
            
            If InStr(1, sSubtitulo, "Libre", 1) > 0 Then
                bIncluirMesa = False
            End If
            
            If InStr(1, sSubtitulo, "El Maiten", 1) > 0 Then
                bIncluirMesa = False
            End If
            
            ' Solo procesar si la mesa pasa los filtros
            If bIncluirMesa Then
                ' Copiar nombre de la materia
                oSheetResumido.getCellByPosition(0, nFilaDestino).setString(sCellValue)
                
                ' Extraer el código numérico de la materia
                Dim sCodigoMateria As String
                sCodigoMateria = ExtraerCodigoMateria(sCellValue)
                
                ' Buscar la fila con los datos (3 filas más abajo)
                Dim nFilaDatos As Long
                nFilaDatos = nFilaActual + 3
            
                ' Verificar que la fila de datos existe
                If nFilaDatos < nLastRow Then
                    ' Copiar Fecha
                    Dim sFecha As String
                    sFecha = Trim(oSheetOriginal.getCellByPosition(1, nFilaDatos).getString())
                    oSheetResumido.getCellByPosition(1, nFilaDestino).setString(sFecha)
                    
                    ' Copiar Hora
                    Dim sHora As String
                    sHora = Trim(oSheetOriginal.getCellByPosition(2, nFilaDatos).getString())
                    oSheetResumido.getCellByPosition(2, nFilaDestino).setString(sHora)
                    
                    ' Leer Docentes del reporte (columna D)
                    Dim sDocentesReporte As String
                    sDocentesReporte = Trim(oSheetOriginal.getCellByPosition(3, nFilaDatos).getString())
                    
                    ' Dividir docentes por coma
                    Dim aDocentesReporte() As String
                    aDocentesReporte = Split(sDocentesReporte, ",")
                    
                    ' Limpiar espacios de cada docente
                    Dim i As Integer
                    For i = LBound(aDocentesReporte) To UBound(aDocentesReporte)
                        aDocentesReporte(i) = Trim(aDocentesReporte(i))
                    Next i
                    
                    ' Buscar la fila de esta materia en la base de datos y asignar roles
                    Dim sPresidente As String
                    Dim sVocal1 As String
                    Dim sVocal2 As String
                    
                    AsignarRolesDocentes(oDocBaseDatos, sCodigoMateria, aDocentesReporte, sPresidente, sVocal1, sVocal2)
                    
                    ' Escribir los docentes en las columnas correspondientes
                    oSheetResumido.getCellByPosition(3, nFilaDestino).setString(sPresidente)
                    oSheetResumido.getCellByPosition(4, nFilaDestino).setString(sVocal1)
                    oSheetResumido.getCellByPosition(5, nFilaDestino).setString(sVocal2)
                End If
                
                ' Incrementar fila de destino
                nFilaDestino = nFilaDestino + 1
            End If
        End If
        
        ' Avanzar a la siguiente fila
        nFilaActual = nFilaActual + 1
    Wend
    
    ' Cerrar el documento de base de datos
    oDocBaseDatos.close(True)
    
    ' Ajustar ancho de columnas
    Dim j As Integer
    For j = 0 To 5
        oSheetResumido.getColumns().getByIndex(j).OptimalWidth = True
    Next j
    
    ' Activar la hoja RESUMIDO
    oDoc.getCurrentController().setActiveSheet(oSheetResumido)
    
    ' Eliminar la hoja "worksheet" si existe
    If oSheets.hasByName("worksheet") Then
        oSheets.removeByName("worksheet")
    End If
    
    ' Copiar todos los datos (sin encabezados) al portapapeles
    ' Rango desde A2 hasta F[última fila con datos]
    If nFilaDestino > 1 Then
        Dim oRango As Object
        Dim nUltimaFila As Long
        nUltimaFila = nFilaDestino - 1
        
        ' Crear el rango desde A2 hasta F[última fila]
        oRango = oSheetResumido.getCellRangeByPosition(0, 1, 5, nUltimaFila)
        
        ' Seleccionar el rango
        oDoc.getCurrentController().select(oRango)
        
        ' Copiar al portapapeles
        Dim oFrame As Object
        Dim oDispatcher As Object
        oFrame = oDoc.getCurrentController().getFrame()
        oDispatcher = createUnoService("com.sun.star.frame.DispatchHelper")
        oDispatcher.executeDispatch(oFrame, ".uno:Copy", "", 0, Array())
    End If
    
    MsgBox "Proceso completado. Se procesaron " & (nFilaDestino - 1) & " materias." & Chr(10) & _
           "Los datos están listos para pegar en otro documento.", 0, "Resumen de Mesas"
    
End Sub

' Función para extraer el código numérico de la materia
Function ExtraerCodigoMateria(sTextoCompleto As String) As String
    Dim sResultado As String
    
    sTextoCompleto = Trim(sTextoCompleto)
    
    If Left(sTextoCompleto, 1) = "(" Then
        Dim nPosParentesis As Integer
        nPosParentesis = InStr(sTextoCompleto, ")")
        
        If nPosParentesis > 0 Then
            sResultado = Mid(sTextoCompleto, 2, nPosParentesis - 2)
        Else
            sResultado = Mid(sTextoCompleto, 2)
        End If
    Else
        sResultado = sTextoCompleto
    End If
    
    ExtraerCodigoMateria = Trim(sResultado)
End Function

' Función para abrir la base de datos
Function AbrirBaseDatos(sRutaArchivo As String) As Object
    Dim oDocBaseDatos As Object
    Dim oFileAccess As Object
    Dim bArchivoExiste As Boolean
    
    oFileAccess = CreateUnoService("com.sun.star.ucb.SimpleFileAccess")
    
    On Error Resume Next
    bArchivoExiste = oFileAccess.exists(ConvertToURL(sRutaArchivo))
    On Error Goto 0
    
    If bArchivoExiste Then
        On Error Resume Next
        oDocBaseDatos = StarDesktop.loadComponentFromURL(ConvertToURL(sRutaArchivo), "_blank", 0, Array())
        On Error Goto 0
        
        If Not IsNull(oDocBaseDatos) Then
            AbrirBaseDatos = oDocBaseDatos
            Exit Function
        End If
    End If
    
    MsgBox "No se encontró el archivo de base de datos en:" & Chr(10) & _
           sRutaArchivo & Chr(10) & Chr(10) & _
           "Seleccione el archivo manualmente.", 48, "Archivo no encontrado"
    
    Dim oFilePicker As Object
    Dim sArchivoSeleccionado As String
    
    oFilePicker = CreateUnoService("com.sun.star.ui.dialogs.FilePicker")
    oFilePicker.appendFilter("Archivos de LibreOffice Calc (*.ods)", "*.ods")
    oFilePicker.appendFilter("Todos los archivos (*.*)", "*.*")
    oFilePicker.setCurrentFilter("Archivos de LibreOffice Calc (*.ods)")
    
    On Error Resume Next
    oFilePicker.setDisplayDirectory(ConvertToURL("/home/cristian/Documentos/"))
    On Error Goto 0
    
    If oFilePicker.execute() = 1 Then
        sArchivoSeleccionado = oFilePicker.getFiles()(0)
        
        On Error Resume Next
        oDocBaseDatos = StarDesktop.loadComponentFromURL(sArchivoSeleccionado, "_blank", 0, Array())
        On Error Goto 0
        
        If Not IsNull(oDocBaseDatos) Then
            AbrirBaseDatos = oDocBaseDatos
            Exit Function
        End If
    End If
    
    AbrirBaseDatos = Null
End Function

' Función para convertir ruta a URL
Function ConvertToURL(sRuta As String) As String
    Dim oPathSettings As Object
    
    If Left(sRuta, 7) = "file://" Then
        ConvertToURL = sRuta
        Exit Function
    End If
    
    oPathSettings = CreateUnoService("com.sun.star.util.PathSubstitution")
    ConvertToURL = oPathSettings.substituteVariables("file://" & sRuta, True)
End Function

' Función para normalizar nombres de docentes (quitar espacios extra, comas, mayúsculas)
Function NormalizarNombre(sNombre As String) As String
    Dim sResultado As String
    
    ' Convertir a mayúsculas
    sResultado = UCase(Trim(sNombre))
    
    ' Quitar comas
    sResultado = Replace(sResultado, ",", "")
    
    ' Quitar espacios múltiples
    Do While InStr(sResultado, "  ") > 0
        sResultado = Replace(sResultado, "  ", " ")
    Loop
    
    NormalizarNombre = Trim(sResultado)
End Function

' Función para asignar roles a los docentes según la base de datos
Sub AsignarRolesDocentes(oDocBD As Object, sCodigoMateria As String, aDocentesReporte() As Variant, _
                         sPresidente As String, sVocal1 As String, sVocal2 As String)
    Dim oSheetBD As Object
    Dim nFila As Long
    Dim sCodigoBD As String
    Dim bEncontrado As Boolean
    
    ' Inicializar
    sPresidente = ""
    sVocal1 = ""
    sVocal2 = ""
    bEncontrado = False
    
    oSheetBD = oDocBD.Sheets.getByIndex(0)
    
    ' Limpiar código de materia (solo espacios, NO guiones todavía)
    sCodigoMateria = Trim(sCodigoMateria)
    
    ' Buscar la fila de esta materia en la base de datos
    Dim sCodigoBuscar As String
    Dim nIntentos As Integer
    
    For nIntentos = 1 To 2
        ' Primer intento: buscar el código completo (con sub-código si existe)
        ' Segundo intento: buscar solo el código base (sin sub-código)
        If nIntentos = 1 Then
            sCodigoBuscar = sCodigoMateria
        Else
            ' Extraer código base (parte antes del guión)
            Dim nPosGuion As Integer
            nPosGuion = InStr(sCodigoMateria, "-")
            If nPosGuion > 0 Then
                sCodigoBuscar = Left(sCodigoMateria, nPosGuion - 1)
            Else
                ' No tiene guión, no hay segundo intento posible
                Exit For
            End If
        End If
        
        ' Buscar en la base de datos
        For nFila = 5 To 229
            sCodigoBD = Trim(oSheetBD.getCellByPosition(0, nFila).getString())
            
            ' Comparar códigos (sin distinguir mayúsculas)
            If UCase(sCodigoBD) = UCase(sCodigoBuscar) Then
                ' Encontramos la materia, leer los docentes de la BD
                Dim sPresidenteBD As String
                Dim sVocal1BD As String
                Dim sVocal2BD As String
                
                sPresidenteBD = Trim(oSheetBD.getCellByPosition(4, nFila).getString()) ' Columna E
                sVocal1BD = Trim(oSheetBD.getCellByPosition(5, nFila).getString())     ' Columna F
                sVocal2BD = Trim(oSheetBD.getCellByPosition(6, nFila).getString())     ' Columna G
                
                ' Normalizar nombres de la BD
                Dim sPresidenteNorm As String
                Dim sVocal1Norm As String
                Dim sVocal2Norm As String
                
                sPresidenteNorm = NormalizarNombre(sPresidenteBD)
                sVocal1Norm = NormalizarNombre(sVocal1BD)
                sVocal2Norm = NormalizarNombre(sVocal2BD)
                
                ' Ahora comparar cada docente del reporte con los de la BD
                Dim i As Integer
                For i = LBound(aDocentesReporte) To UBound(aDocentesReporte)
                    Dim sDocenteReporteNorm As String
                    sDocenteReporteNorm = NormalizarNombre(aDocentesReporte(i))
                    
                    ' Comparar con presidente
                    If sDocenteReporteNorm = sPresidenteNorm Then
                        sPresidente = aDocentesReporte(i) ' Usar el nombre original del reporte
                    ' Comparar con vocal 1
                    ElseIf sDocenteReporteNorm = sVocal1Norm Then
                        sVocal1 = aDocentesReporte(i)
                    ' Comparar con vocal 2
                    ElseIf sDocenteReporteNorm = sVocal2Norm Then
                        sVocal2 = aDocentesReporte(i)
                    End If
                Next i
                
                bEncontrado = True
                Exit For
            End If
        Next nFila
        
        ' Si se encontró, salir del bucle de intentos
        If bEncontrado Then
            Exit For
        End If
    Next nIntentos
    
    ' Si no se encontró la materia
    If Not bEncontrado Then
        sPresidente = "[Materia no encontrada en BD]"
        If UBound(aDocentesReporte) >= 0 Then sVocal1 = aDocentesReporte(0)
        If UBound(aDocentesReporte) >= 1 Then sVocal2 = aDocentesReporte(1)
    End If
End Sub
