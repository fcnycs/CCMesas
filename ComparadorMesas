function normalizarNombre(nombre) {
  if (!nombre) return "";
  return nombre.replace(/,/g, "")
               .trim()
               .toUpperCase()
               .split(/\s+/)
               .join(" ");
}

function normalizarFecha(valor) {
  if (!valor) return "";
  if (Object.prototype.toString.call(valor) === "[object Date]") {
    return Utilities.formatDate(valor, Session.getScriptTimeZone(), "dd/MM/yyyy");
  }
  var str = valor.toString().trim();
  if (str.match(/^\d{1,2}\/\d{1,2}\/\d{4}$/)) {
    return str;
  }
  if (str.match(/^\d{1,2}-\d{1,2}-\d{4}$/)) {
    var partes = str.split("-");
    return partes[0].padStart(2, "0") + "/" + partes[1].padStart(2, "0") + "/" + partes[2];
  }
  return str;
}

function normalizarHora(valor) {
  if (!valor) return "";
  if (Object.prototype.toString.call(valor) === "[object Date]") {
    var totalMin = Math.round((valor.getTime() % (24*60*60*1000)) / 60000);
    var h = Math.floor(totalMin / 60);
    var m = totalMin % 60;
    return ("0"+h).slice(-2)+":"+("0"+m).slice(-2);
  }
  var str = valor.toString().trim();
  if (/^\d+$/.test(str)) {
    if (str.length===3) str="0"+str;
    return str.slice(0,2)+":"+str.slice(2);
  }
  if (str.match(/^\d{1,2}:\d{2}(:\d{2})?$/)) {
    return str.split(":").slice(0,2).join(":");
  }
  return str;
}

function normalizarCodigo(materia) {
  if (!materia) return "";
  var match = materia.toString().match(/\(([^)]+)\)/);
  if (match) return match[1].trim();
  return materia.toString().trim();
}

function extraerAsignatura(materia) {
  if (!materia) return "";
  return materia.toString().replace(/\([^)]+\)\s*/, "").trim();
}

function compararMesasRolPorRol() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var hojaDrive = ss.getSheetByName("DRIVE IMPORTADO");
  var hojaReporte = ss.getSheetByName("REPORTE DE MESAS CREADAS");
  var hojaComp = ss.getSheetByName("COMPARADOR");
  
  hojaComp.clear();
  hojaComp.appendRow(["", "CÓDIGO", "ASIGNATURA", "FECHA", "HORA", "PRESIDENTE", "VOCAL 1", "VOCAL 2"]);
  
  var datosDrive = hojaDrive.getRange(8, 1, hojaDrive.getLastRow() - 7, 7).getValues();
  var datosReporte = hojaReporte.getRange(2, 1, hojaReporte.getLastRow() - 1, 4).getValues();
  
  var normalizadoDrive = datosDrive.map(function(row) {
    return {
      codigo: row[0] ? row[0].toString().trim() : "",
      asignatura: row[1] ? row[1].toString().trim() : "",
      fecha: normalizarFecha(row[2]),
      hora: normalizarHora(row[3]),
      presidente: normalizarNombre(row[4]),
      vocal1: normalizarNombre(row[5]),
      vocal2: normalizarNombre(row[6]),
      docentes: [normalizarNombre(row[4]), normalizarNombre(row[5]), normalizarNombre(row[6])].sort()
    };
  });
  
  var normalizadoReporte = datosReporte.map(function(row) {
    var codigo = normalizarCodigo(row[0]);
    var asignatura = extraerAsignatura(row[0]);
    var fecha = normalizarFecha(row[1]);
    var hora = normalizarHora(row[2]);
    var docentes = row[3] ? row[3].split(",").map(normalizarNombre) : [];
    return {
      codigo: codigo,
      asignatura: asignatura,
      fecha: fecha,
      hora: hora,
      presidente: docentes[0] || "",
      vocal1: docentes[1] || "",
      vocal2: docentes[2] || "",
      docentes: docentes.slice().sort()
    };
  });
  
  // Detectar mesas duplicadas en REPORTE
  var reportePorAsignatura = {};
  normalizadoReporte.forEach(function(fila) {
    var key = fila.asignatura + "|" + fila.fecha + "|" + fila.hora + "|" + fila.docentes.join("|");
    if (!reportePorAsignatura[key]) {
      reportePorAsignatura[key] = [];
    }
    reportePorAsignatura[key].push(fila);
  });
  
  normalizadoDrive.forEach(function(filaDrive) {
    var matchFound = null;
    
    for (var i = 0; i < normalizadoReporte.length; i++) {
      var filaReporte = normalizadoReporte[i];
      
      if (filaReporte.codigo === filaDrive.codigo && 
          filaReporte.fecha === filaDrive.fecha && 
          filaReporte.hora === filaDrive.hora) {
        matchFound = filaReporte;
        break;
      }
    }
    
    if (matchFound) {
      var docentesIguales = true;
      if (filaDrive.docentes.length !== matchFound.docentes.length) {
        docentesIguales = false;
      } else {
        for (var k = 0; k < filaDrive.docentes.length; k++) {
          if (filaDrive.docentes[k] !== matchFound.docentes[k]) {
            docentesIguales = false;
            break;
          }
        }
      }
      
      if (docentesIguales) {
        // Mesa correcta
        var key = filaDrive.asignatura + "|" + filaDrive.fecha + "|" + filaDrive.hora + "|" + filaDrive.docentes.join("|");
        var mesasDelMismoGrupo = reportePorAsignatura[key] || [];
        var esDuplicada = mesasDelMismoGrupo.length > 1;
        
        hojaComp.appendRow([
          "",
          filaDrive.codigo,
          filaDrive.asignatura,
          filaDrive.fecha,
          filaDrive.hora,
          filaDrive.presidente,
          filaDrive.vocal1,
          filaDrive.vocal2
        ]);
        
        var lastRow = hojaComp.getLastRow();
        var rangoIndicador = hojaComp.getRange(lastRow, 1, 1, 1);
        var rangoFila = hojaComp.getRange(lastRow, 2, 1, 7);
        
        if (esDuplicada) {
          rangoIndicador.setBackground("#ffd966");
          rangoFila.setFontWeight("bold").setFontColor("#f79646").setBackground("#ffd966");
        } else {
          rangoIndicador.setBackground("#d9ead3");
          rangoFila.setFontWeight("bold").setFontColor("#00b050").setBackground("#d9ead3");
        }
      } else {
        // Hay error en los docentes - mostrar 3 filas
        
        // Fila 1: Título con error (código y asignatura)
        hojaComp.appendRow([
          "",
          filaDrive.codigo,
          filaDrive.asignatura,
          "",
          "",
          "",
          "",
          ""
        ]);
        var row1 = hojaComp.getLastRow();
        hojaComp.getRange(row1, 1, 1, 1).setBackground("#f4cccc");
        hojaComp.getRange(row1, 2, 1, 2)
          .setFontWeight("bold")
          .setFontColor("red")
          .setBackground("#f4cccc");
        hojaComp.getRange(row1, 4, 1, 5).setBackground("#f4cccc");
        
        // Fila 2: Datos del DRIVE (correctos)
        hojaComp.appendRow([
          "",
          filaDrive.codigo,
          filaDrive.asignatura,
          filaDrive.fecha,
          filaDrive.hora,
          filaDrive.presidente,
          filaDrive.vocal1,
          filaDrive.vocal2
        ]);
        var row2 = hojaComp.getLastRow();
        hojaComp.getRange(row2, 1, 1, 8).setBackground("#d9ead3");
        
        // Fila 3: Datos del REPORTE (con errores resaltados)
        hojaComp.appendRow([
          "",
          matchFound.codigo,
          matchFound.asignatura,
          matchFound.fecha,
          matchFound.hora,
          matchFound.presidente,
          matchFound.vocal1,
          matchFound.vocal2
        ]);
        var row3 = hojaComp.getLastRow();
        hojaComp.getRange(row3, 1, 1, 1).setBackground("#f4cccc");
        hojaComp.getRange(row3, 2, 1, 7).setBackground("#f4cccc");
        
        // Resaltar solo las celdas con error en negrita rojo
        if (filaDrive.presidente !== matchFound.presidente) {
          hojaComp.getRange(row3, 6, 1, 1)
            .setFontWeight("bold")
            .setFontColor("red");
        }
        if (filaDrive.vocal1 !== matchFound.vocal1) {
          hojaComp.getRange(row3, 7, 1, 1)
            .setFontWeight("bold")
            .setFontColor("red");
        }
        if (filaDrive.vocal2 !== matchFound.vocal2) {
          hojaComp.getRange(row3, 8, 1, 1)
            .setFontWeight("bold")
            .setFontColor("red");
        }
      }
    } else {
      // No hay coincidencia - error
      hojaComp.appendRow([
        "",
        filaDrive.codigo,
        filaDrive.asignatura,
        "",
        "",
        "",
        "",
        ""
      ]);
      var row1 = hojaComp.getLastRow();
      hojaComp.getRange(row1, 1, 1, 1).setBackground("#f4cccc");
      hojaComp.getRange(row1, 2, 1, 2)
        .setFontWeight("bold")
        .setFontColor("red")
        .setBackground("#f4cccc");
      hojaComp.getRange(row1, 4, 1, 5).setBackground("#f4cccc");
      
      // Fila 2: Datos del DRIVE
      hojaComp.appendRow([
        "",
        filaDrive.codigo,
        filaDrive.asignatura,
        filaDrive.fecha,
        filaDrive.hora,
        filaDrive.presidente,
        filaDrive.vocal1,
        filaDrive.vocal2
      ]);
      var row2 = hojaComp.getLastRow();
      hojaComp.getRange(row2, 1, 1, 8).setBackground("#d9ead3");
    }
  });
  
  hojaComp.getRange(1, 1, 1, 1).setBackground("#ffffff");
  hojaComp.getRange(1, 2, 1, 7)
    .setFontWeight("bold")
    .setFontColor("#000000")
    .setBackground("#e8e8e8");
}
