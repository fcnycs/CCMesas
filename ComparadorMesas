function normalizarNombre(nombre) {
  if (!nombre) return "";
  return nombre.replace(/,/g,"")
               .trim()
               .toUpperCase()
               .split(/\s+/)
               .join(" ");
}

function normalizarFecha(valor) {
  if (!valor) return "";
  try {
    return Utilities.formatDate(new Date(valor), Session.getScriptTimeZone(), "dd/MM/yyyy");
  } catch(e) {
    return valor.toString().trim();
  }
}

function normalizarHora(valor) {
  if (!valor) return "";
  if (Object.prototype.toString.call(valor) === "[object Date]") {
    var totalMin = Math.round((valor.getTime() % (24*60*60*1000)) / 60000);
    var h = Math.floor(totalMin / 60);
    var m = totalMin % 60;
    return ("0"+h).slice(-2)+":"+("0"+m).slice(-2);
  }
  var str = valor.toString().trim();
  if (/^\d+$/.test(str)) {
    if (str.length===3) str="0"+str;
    return str.slice(0,2)+":"+str.slice(2);
  }
  if (str.match(/^\d{1,2}:\d{2}(:\d{2})?$/)) {
    return str.split(":").slice(0,2).join(":");
  }
  return str;
}

function normalizarCodigo(materia) {
  if (!materia) return "";
  var match = materia.toString().match(/\(([^)]+)\)/);
  if (match) return match[1].trim();
  return materia.toString().trim();
}

function extraerAsignatura(materia) {
  if (!materia) return "";
  return materia.toString().replace(/\([^)]+\)\s*/, "").trim();
}

function compararMesasRolPorRol() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var hojaDrive = ss.getSheetByName("DRIVE IMPORTADO");
  var hojaReporte = ss.getSheetByName("REPORTE DE MESAS CREADAS");
  var hojaComp = ss.getSheetByName("COMPARADOR");
  
  hojaComp.clear();
  hojaComp.appendRow(["CÓDIGO","ASIGNATURA","FECHA","HORA","PRESIDENTE","VOCAL 1","VOCAL 2"]);
  
  // DRIVE: desde fila 8, columnas A–G
  var datosDrive = hojaDrive.getRange(8,1,hojaDrive.getLastRow()-7,7).getValues();
  // REPORTE: desde fila 2, columnas A–D
  var datosReporte = hojaReporte.getRange(2,1,hojaReporte.getLastRow()-1,4).getValues();
  
  // Normalizar REPORTE
  var normalizadoReporte = datosReporte.map(function(row){
    var codigo = normalizarCodigo(row[0]);
    var asignatura = extraerAsignatura(row[0]);
    var fecha = normalizarFecha(row[1]);
    var hora = normalizarHora(row[2]);
    var docentes = row[3] ? row[3].split(",").map(normalizarNombre) : [];
    return {
      codigo:codigo,
      asignatura:asignatura,
      fecha:fecha,
      hora:hora,
      presidente:docentes[0]||"",
      vocal1:docentes[1]||"",
      vocal2:docentes[2]||""
    };
  });
  
  // Comparar con DRIVE
  datosDrive.forEach(function(row){
    var codigo = row[0] ? row[0].toString().trim() : "";
    var asignatura = row[1] ? row[1].toString().trim() : ""; // Columna B en Drive
    var fecha = normalizarFecha(row[2]);
    var hora = normalizarHora(row[3]);
    var presidente = normalizarNombre(row[4]);
    var vocal1 = normalizarNombre(row[5]);
    var vocal2 = normalizarNombre(row[6]);
    
    var match = normalizadoReporte.find(function(r){
      return r.codigo === codigo && r.fecha === fecha && r.hora === hora;
    });
    
    var fila = [codigo,asignatura,fecha,hora,presidente,vocal1,vocal2];
    hojaComp.appendRow(fila);
    var lastRow = hojaComp.getLastRow();
    var rango = hojaComp.getRange(lastRow,1,1,7);
    
    if(match){
      var okPres = (match.presidente === presidente);
      var okVoc1 = (match.vocal1 === vocal1);
      var okVoc2 = (match.vocal2 === vocal2);
      
      if(okPres && okVoc1 && okVoc2){
        rango.setFontWeight("bold").setFontColor("green").setBackground("#d9ead3");
      } else {
        rango.setFontWeight("bold").setFontColor("red").setBackground("#f4cccc");
        hojaComp.appendRow([match.codigo, match.asignatura, match.fecha, match.hora,
                            match.presidente, match.vocal1, match.vocal2]);
        hojaComp.getRange(lastRow+1,1,1,7).setFontWeight("bold").setFontColor("red").setBackground("#f4cccc");
      }
    } else {
      rango.setFontWeight("bold").setFontColor("red").setBackground("#f4cccc");
    }
  });
}
